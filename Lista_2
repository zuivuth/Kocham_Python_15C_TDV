import random
def zad1():
    start = int(input("Wprowadź liczbę początkową: "))
    end = int(input("Wprowadź liczbę końcową: "))
    distance = int(input("Wprowadź wielkość odstępu: "))

    print(f"Liczby między {start} a {end} z odstępem {distance} to:")
    for i in range(start, end + 1, distance):
        print(i)
def zad2():
    message = input("Wprowadź swój komunikat: ")
    print(f"Komunikat w odwrotnej kolejności: {message[::-1]}")

def zad3():
    words = ['kot', 'pies', 'ryba', 'ptak', 'kon']
    word = random.choice(words)
    print(f"Słowo ma {len(word)} liter.")
    attemps = 5

    while attemps > 0:
        letter = input("Zgadnij literę: ")
        if letter in word:
            print("Tak")
        else:
            print("Nie")
        attemps -= 1
    guess = input("Podaj finalną odpowiedź: ")
    if word == guess:
        print("Gratulacje, odgadłeś słowo!")
    else:
        print(f"Nie udało Ci się odgadnąć słowa. Słowo to: {word}")

def zad4():
    words = ['statek', 'samolot', 'samochod', 'traktor', 'ciezarowka']
    word = random.choice(words)
    guessed_letters = []
    correct_letters = []

    def display_word():
        for letter in word:
            if letter in guessed_letters:
                print(letter, end=' ')
            else:
                print('_', end=' ')
        print()

    tries = 6

    while tries > 0:
        print(f"Pozostało {tries} prób.")
        print(f"Używane litery: {guessed_letters}")
        display_word()

        letter = input("Zgadnij literę: ")

        if letter in guessed_letters:
            print("Ta litera już była podana.")
            continue

        guessed_letters.append(letter)

        if letter in word:
            print("Tak, litera znajduje się w słowie.")
            correct_letters.append(letter)
        else:
            print("Nie, litera nie znajduje się w słowie.")
            tries -= 1
        if set(word) == set(correct_letters):
            print("Gratulacje, odgadłeś słowo!")
            display_word()
            break

    if tries == 0:
        print("Nie udało Ci się odgadnąć słowa.")
        print(f"Słowo to: {word}")
    else:
        print("Koniec gry.")

def zad5():
    def display_board(board):
        blankBoard = """
    ___________________
    |     |     |     |
    |  7  |  8  |  9  |
    |     |     |     |
    |-----------------|
    |     |     |     |
    |  4  |  5  |  6  |
    |     |     |     |
    |-----------------|
    |     |     |     |
    |  1  |  2  |  3  |
    |     |     |     |
    |-----------------|
    """

        for i in range(1, 10):
            if (board[i] == 'O' or board[i] == 'X'):
                blankBoard = blankBoard.replace(str(i), board[i])
            else:
                blankBoard = blankBoard.replace(str(i), ' ')
        print(blankBoard)

    def player_input():
        player1 = input("Please pick a marker 'X' or 'O' ")
        while True:
            if player1.upper() == 'X':
                player2 = 'O'
                print("You've choosen " + player1 + ". Player 2 will be " + player2)
                return player1.upper(), player2
            elif player1.upper() == 'O':
                player2 = 'X'
                print("You've choosen " + player1 + ". Player 2 will be " + player2)
                return player1.upper(), player2
            else:
                player1 = input("Please pick a marker 'X' or 'O' ")

    def place_marker(board, marker, position):
        board[position] = marker
        return board

    def space_check(board, position):
        return board[position] == '#'

    def full_board_check(board):
        return len([x for x in board if x == '#']) == 1

    def win_check(board, marker):
        return ((board[7] == board[8] == board[9] == marker) or
                (board[4] == board[5] == board[6] == marker) or
                (board[1] == board[2] == board[3] == marker) or
                (board[7] == board[4] == board[1] == marker) or
                (board[8] == board[5] == board[2] == marker) or
                (board[9] == board[6] == board[3] == marker) or
                (board[7] == board[5] == board[3] == marker) or
                (board[9] == board[5] == board[1] == marker))

    def player_choice(board):
        choice = input("Please select an empty space between 1 and 9 : ")
        while not space_check(board, int(choice)):
            choice = input("This space isn't free. Please choose between 1 and 9 : ")
        return choice

    def replay():
        playAgain = input("Do you want to play again (y/n) ? ")
        if playAgain.lower() == 'y':
            return True
        if playAgain.lower() == 'n':
            return False

    print('Welcome to Tic Tac Toe!')
    i = 1
    # Choose your side
    players = player_input()
    # Empty board init
    board = ['#'] * 10
    while True:
        # Set the game up here
        game_on = full_board_check(board)
        while not game_on:
            # Player to choose where to put the mark
            position = player_choice(board)
            # Who's playin ?
            if i % 2 == 0:
                marker = players[1]
            else:
                marker = players[0]
            # Play !
            place_marker(board, marker, int(position))
            # Check the board
            display_board(board)
            i += 1
            if win_check(board, marker):
                print("You won !")
                break
            game_on = full_board_check(board)
        if not replay():
            break
        else:
            i = 1
            # Choose your side
            players = player_input()
            # Empty board init
            board = ['#'] * 10
